name: Tag and Release

on:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - main
      - release

permissions:
  contents: write

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Read VERSION file
      - name: Read base version from file
        run: |
          VERSION=$(cat VERSION)
          echo "BASE_VERSION=$VERSION" >> $GITHUB_ENV

      # Step 3: Determine Tag and Release Type
      - name: Determine Tag and Release Type
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/release" ]]; then
            TAG="${{ env.BASE_VERSION }}-rc.${{ github.run_number }}"
            RELEASE_TYPE="prerelease"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            TAG="${{ env.BASE_VERSION }}"
            RELEASE_TYPE="stable"
          else
            echo "Unsupported branch" && exit 1
          fi

          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "RELEASE_TYPE=$RELEASE_TYPE" >> $GITHUB_ENV

      # Step 4: Create Git Tag
      - name: Create and Push Git Tag
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      # Step 5: Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          body: |
            This is the ${{ env.RELEASE_TYPE == 'prerelease' && 'release candidate' || 'production' }} version.
            - Auto-generated by GitHub Actions.
          draft: false
          prerelease: ${{ env.RELEASE_TYPE == 'prerelease' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}